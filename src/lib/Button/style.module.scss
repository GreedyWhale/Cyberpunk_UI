@import "@/assets/scss/colorScheme.scss";


@mixin textGlowAnimation($theme, $middleColor, $endColor) {
  @keyframes #{$theme}glow {
    from {
      text-shadow: 0 0 0.125em #fff, 0 0 0.15em #fff, 0 0 0.375em $middleColor, 0 0 0.5em $middleColor, 0 0 0.625em $middleColor, 0 0 0.75em $middleColor, 0 0 0.875em $middleColor;
    }
    to {
      text-shadow: 0 0 0.125em #fff, 0 0 0.15em $endColor, 0 0 0.375em $endColor, 0 0 0.5em $endColor, 0 0 0.625em $endColor, 0 0 0.75em $endColor, 0 0 0.875em $endColor, 0 0 1em $endColor;
    }
  }

  animation: #{$theme}glow 1s ease-in-out infinite alternate;
}

@mixin clipPath($position) {
  $coordinates: (
    topLeft: polygon(0 25%, 8% 0, 100% 0, 100% 100%, 0 100%),
    topRight: polygon(0 0, 92% 0, 100% 25%, 100% 100%, 0 100%),
    bottomLeft: polygon(0 0, 0 75%, 8% 100%, 100% 100%, 100% 0),
    bottomRight: polygon(0 0, 100% 0, 100% 75%, 92% 100%, 0 100%),
    leftDiagonal: polygon(0 25%, 8% 0, 100% 0, 100% 75%, 92% 100%, 0 100%),
    rightDiagonal: polygon(92% 0, 100% 25%, 100% 100%, 8% 100%, 0% 75%, 0 0),
    left: polygon(0 25%, 8% 0, 100% 0, 100% 100%, 8% 100%, 0 75%),
    right: polygon(0 0, 92% 0, 100% 25%, 100% 75%, 92% 100%, 0 100%),
    all: polygon(0 25%, 8% 0, 92% 0, 100% 25%, 100% 75%, 92% 100%, 8% 100%, 0 75%)
  );
  clip-path: map-get($coordinates, $position)
}

@mixin setButtonStyle($type) {
  $themes: (
    'normal': $normal-color,
    'danger': $danger-color,
    'safety': $safety-color
  );
  @if ($type == 'ghost') {
    padding: 0.2em 2em;
    transition: all 200ms ease-out;
    border: none;
    @each $theme, $value in $themes {
      &[data-theme=#{$theme}] {
        &[data-disabled="false"] {
          background: rgba($value, 0.2);
          color: $value;
          box-shadow: inset 0 0 0.5em 0 $value;
          &:active {
            background-color: darken($color: $value, $amount: 20);
          }
          &:hover {
            @include textGlowAnimation($theme, $value, #575267);
          }
          &:focus {
            box-shadow: inset 0 0 0.5em 0 lighten($color: $value, $amount: 20);
          }
          &[data-corner="false"] {
            border: 1px solid $value;
            &:focus {
              border: 1px solid lighten($color: $value, $amount: 20);
            }
          }
        }
      }
    }
  }
}
.button {
  cursor: pointer;
  outline: none;
  user-select: none;
  $types: 'ghost', 'text', 'toggle', 'multiselect', 'split';
  @each $type in $types {
    &[data-type=#{$type}] {
      @include setButtonStyle($type)
    }
  }
  $corners: 'topLeft','topRight','bottomLeft','bottomRight','leftDiagonal','rightDiagonal','left','right','all';
  @each $corner in $corners {
    &[data-corner=#{$corner}] {
      @include clipPath($corner);
    }
  }
  &[data-disabled="true"] {
    color: $disable-color;
    cursor: not-allowed;
    border: 1px solid $disable-color;
    background: transparent;
    position: relative;
    .corner {
      position: absolute;
      width: 0.5em;
      height: 0.5em;
      &:nth-child(1),
      &:nth-child(2) {
        top: -2px;
        border-top: 1px solid $disable-color;
      }
      &:nth-child(3),
      &:nth-child(4) {
        bottom: -2px;
        border-bottom: 1px solid $disable-color;
      }
      &:nth-child(1) {
        left: -2px;
        border-left: 1px solid $disable-color;
      }
      &:nth-child(2) {
        right: -2px;
        border-right: 1px solid $disable-color;
      }
      &:nth-child(3) {
        right: -2px;
        border-right: 1px solid $disable-color;
      }
      &:nth-child(4) {
        left: -2px;
        border-left: 1px solid $disable-color;
      }
    }
  }
}
